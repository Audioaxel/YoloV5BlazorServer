@using BlazorToolBoxLib.Services.Notifications.ImageUpload
@using BlazorToolBoxLib.Services.YoloHelper
@using BlazorToolBoxLib.Services.HttpRequests
@inject IImageUploadNotify notify
@inject IYoloV5ApiImageRequest request
@implements IDisposable

@namespace BlazorToolBoxLib.RazorComponents.DrawingCanvas


<h3>BoundingBoxes</h3>

<br />

@*--- Button ---*@
<div class="row mt-2">
    <div class="col-md-4">
        <div class="form-group">
            <button type="button" class="btn btn-primary" @onclick="AnnotateImage" disabled="@(!_uploaded)">Annotade Image</button>
        </div>
    </div>
</div>
@*--- Button ---*@

@if (_imageDataUrl is not null)
{
    <img src="@_imageDataUrl" />
}

@*--- Button ---*@
<div class="row mt-2">
    <div class="col-md-4">
        <div class="form-group">
            <button type="button" class="btn btn-primary" @onclick="SaveImage">Save Image</button>
        </div>
    </div>
</div>
@*--- Button ---*@

@if (_imageUrl is not null)
{
    <h5>@_imageUrl</h5>
    <h5>@_filePath</h5>
}

@* ==================================================================================== *@

@code {
    BoundingBoxes boundingBoxes = new BoundingBoxes();

    private string? _imageDataUrl = null;

    // Uploaded Image
    private string? _imageUrl = null;
    private string? _filePath = null;
    private bool _uploaded = false;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        boundingBoxes.DrawBoundingBoxes();
        notify.OnImageUpload += OnImageUpload;
    }

    private async Task AnnotateImage()
    {
        request.SendRequest(_imageUrl);
    }

    private async Task SaveImage()
    {
        boundingBoxes.SaveImage();
        _imageDataUrl = boundingBoxes.ImageDataUrl;
        _uploaded = true;
        await InvokeAsync(StateHasChanged);
    }

    private void OnImageUpload()
    {
        _imageUrl = notify.ImageUrl;
        _filePath = notify.FilePath;
        StateHasChanged();
    }

    public void Dispose()
    {
        notify.OnImageUpload -= OnImageUpload;
    }
}






